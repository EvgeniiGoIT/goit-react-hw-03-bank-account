{"version":3,"sources":["Components/TransactionHistory/TransactionHistory.module.css","Components/Dashboard/Dashboard.module.css","Components/Controls/Controls.module.css","Constant/TYPE.js","Constant/MESSAGE.js","Components/Controls/Controls.jsx","Components/Balance/Balance.jsx","Components/TransactionHistory/TransactionHistory.jsx","Components/Dashboard/Dashboard.jsx","Components/App/App.jsx","index.js","Components/Balance/Balance.module.css"],"names":["module","exports","deposit","withdraw","zero","noEnough","Controls","state","value","saveInputValue","e","currentTarget","setState","sendTransaction","transaction","type","onTransaction","this","props","className","styles","controls","input","name","onChange","button","onClick","TYPE","Component","Balance","income","expenses","balance","fixedNumber","number","toFixed","role","aria-label","balance__text","TransactionHistory","items","history","tableHeading","map","item","id","amount","date","tableRow","key","Dashboard","transactions","handleTransaction","checkTransaction","toast","MESSAGE","saveTransaction","newTransaction","setTransaction","prevState","uuidv1","Date","toLocaleString","incomeExpenses","length","filter","reduce","acc","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79cb3540.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__hbEa1\",\"tableRow\":\"TransactionHistory_tableRow__3_PHk\",\"tableHeading\":\"TransactionHistory_tableHeading__11WHq TransactionHistory_tableRow__3_PHk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1-Imp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2gW6X\",\"input\":\"Controls_input__3iFRw\",\"button\":\"Controls_button__7MFiM\"};","export default {\r\n  deposit: 'deposit',\r\n  withdraw: 'withdraw',\r\n};\r\n","export default {\r\n  zero: 'Введите сумму для проведения операции!',\r\n  noEnough: 'На счету недостаточно средств для проведения операции!',\r\n};\r\n","import React, { Component } from \"react\";\r\nimport T from \"prop-types\";\r\nimport TYPE from \"../../Constant/TYPE\";\r\nimport styles from \"./Controls.module.css\";\r\n\r\nclass Controls extends Component {\r\n  static propTypes = {\r\n    onTransaction: T.func.isRequired\r\n  };\r\n  state = {\r\n    value: \"\"\r\n  };\r\n  saveInputValue = e => {\r\n    const value = e.currentTarget.value;\r\n    this.setState({ value });\r\n  };\r\n  sendTransaction = (transaction, type) => {\r\n    const { value } = this.state;\r\n    transaction(+value, type);\r\n    this.setState({ value: \"\" });\r\n  };\r\n  render() {\r\n    const { onTransaction } = this.props;\r\n    const { value } = this.state;\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          className={styles.input}\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={value}\r\n          onChange={this.saveInputValue}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={() => this.sendTransaction(onTransaction, TYPE.deposit)}\r\n        >\r\n          Deposit\r\n        </button>\r\n        <button\r\n          className={styles.button}\r\n          type=\"button\"\r\n          onClick={() => this.sendTransaction(onTransaction, TYPE.withdraw)}\r\n        >\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./Balance.module.css\";\r\n\r\nconst Balance = ({income, expenses, balance}) => {\r\n  const fixedNumber = number => number.toFixed(2);\r\n    return (\r\n    <section className={styles.balance}>\r\n      <span className={styles.income}>\r\n        <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">\r\n          ⬆️\r\n        </span>\r\n        {fixedNumber(income)} $\r\n      </span>\r\n      <span className={styles.expenses}>\r\n        <span role=\"img\" aria-label=\"jsx-a11y/accessible-emoji\">\r\n          ⬇️\r\n        </span>\r\n        {fixedNumber(expenses)} $\r\n      </span>\r\n      <span className={styles.balance__text}>Balance: {fixedNumber(balance)} $</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nBalance.propTypes = {\r\n  balance: T.number.isRequired,\r\n  income: T.number.isRequired,\r\n  expenses: T.number.isRequired\r\n};\r\nexport default Balance;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr className={styles.tableHeading}>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(item => {\r\n        const { id, type, amount, date } = item;\r\n        return (\r\n          <tr className={styles.tableRow} key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount.toFixed(2)} $</td>\r\n            <td>{date}</td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      id: T.string.isRequired,\r\n      type: T.string.isRequired,\r\n      amount: T.number.isRequired,\r\n      date: T.string.isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\nexport default TransactionHistory;\r\n","import React, { Component } from \"react\";\r\nimport uuidv1 from \"uuid/v1\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport TYPE from \"../../Constant/TYPE\";\r\nimport MESSAGE from \"../../Constant/MESSAGE\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport Controls from \"./../Controls/Controls\";\r\nimport Balance from \"./../Balance/Balance\";\r\nimport TransactionHistory from \"./../TransactionHistory/TransactionHistory\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    transactions: [],\r\n    balance: 0\r\n  };\r\n\r\n  handleTransaction = (value, type) => {\r\n    this.checkTransaction(value, type);\r\n  };\r\n  checkTransaction = (value, type) => {\r\n    const { balance } = this.state;\r\n    if (!value || value < 0) {\r\n      toast(MESSAGE.zero);\r\n      return;\r\n    }\r\n    if (type === TYPE.withdraw && value > balance) {\r\n      toast(MESSAGE.noEnough);\r\n      return;\r\n    }\r\n    this.saveTransaction(value, type);\r\n  };\r\n  saveTransaction = (value, type) => {\r\n    const newTransaction = this.setTransaction(value, type);\r\n    this.setState(prevState => ({\r\n      transactions: [...prevState.transactions, newTransaction],\r\n      balance:\r\n        type === TYPE.deposit\r\n          ? prevState.balance + value\r\n          : prevState.balance - value\r\n    }));\r\n  };\r\n  setTransaction = (amount, type) => ({\r\n    id: uuidv1(),\r\n    type,\r\n    amount,\r\n    date: new Date().toLocaleString()\r\n  });\r\n  incomeExpenses = (transactions, type) => {\r\n    return transactions.length\r\n      ? transactions\r\n          .filter(transaction => transaction.type === TYPE[type])\r\n          .reduce((acc, transaction) => acc + transaction.amount, 0)\r\n      : 0;\r\n  };\r\n  render() {\r\n    const { transactions, balance } = this.state;\r\n    const income = this.incomeExpenses(transactions, TYPE.deposit);\r\n    const expenses = this.incomeExpenses(transactions, TYPE.withdraw);\r\n    return (\r\n      <>\r\n        <div className={styles.dashboard}>\r\n          <Controls\r\n            onTransaction={this.handleTransaction}\r\n          />\r\n          <Balance balance={balance} income={income} expenses={expenses} />\r\n          {transactions.length > 0 && (\r\n            <TransactionHistory items={transactions} />\r\n          )}\r\n          <ToastContainer />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\n\r\nconst App = () => <Dashboard />;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1BCQ3\",\"balance__text\":\"Balance_balance__text__J4F-G\",\"income\":\"Balance_income__3LAlw Balance_balance__text__J4F-G\",\"expenses\":\"Balance_expenses__3tdO9 Balance_balance__text__J4F-G\"};"],"sourceRoot":""}